add_library(logging logging.f90)
target_compile_options(logging PRIVATE ${FFLAGS})

if(CMAKE_Fortran_COMPILER_ID STREQUAL PGI)
  message(STATUS "PGI doesn't work correctly for this append_file example, even alone")
else()
  add_executable(append_file append_file.f90)
  target_compile_options(append_file PRIVATE ${FFLAGS})
  target_link_libraries(append_file PRIVATE logging)
  add_test(NAME AppendFile COMMAND append_file)
endif()

add_executable(termio terminal_io.f90)
target_compile_options(termio PRIVATE ${FFLAGS})
if(NOT WIN32)
  add_test(NAME FortranTerminalIO COMMAND bash -c "$<TARGET_FILE:termio> <<< 0")
endif()

add_executable(leading_zeros leading_zeros.f90)
target_compile_options(leading_zeros PRIVATE ${FFLAGS})
add_test(NAME LeadingZeros COMMAND leading_zeros)
set_tests_properties(LeadingZeros PROPERTIES
  PASS_REGULAR_EXPRESSION "hello1234.5600000")

if(WIN32 AND CMAKE_Fortran_COMPILER_ID STREQUAL PGI)
  message(STATUS "CMake bug with PGI on Windows -- pgfortran.exe itself works")
else()
  add_executable(expanduser expanduser.f90)
  target_compile_options(expanduser PRIVATE ${FFLAGS})
  add_test(NAME Expanduser COMMAND expanduser)
endif()

add_executable(notermsize noenv.f90)
target_compile_options(notermsize PRIVATE ${FFLAGS})
add_test(NAME NoTermSize COMMAND notermsize)

add_executable(readonly fileopen-readonly.f90)
target_compile_options(readonly PRIVATE ${FFLAGS})
add_test(NAME FortranReadOnly COMMAND readonly)

if(WIN32 AND CMAKE_Fortran_COMPILER_ID STREQUAL PGI)
  message(STATUS "bug with PGI on Windows--PGI on Linux OK")
else()
  add_executable(null devnull.f90)
  target_compile_options(null PRIVATE ${FFLAGS})
  add_test(NAME FortranNullfile COMMAND null)
endif()
